/*------------function--------------------------------------------*/

@function automargin() {
  @return 0 auto;
}

/*------------extend--------------------------------------------*/

%WidthHeight {
  width: 100%;
  height: 100%;
}

%position-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

%page-start {
  margin: 80px 0 0 0;
  padding: 50px 0;
  height: $full;
}
%wrapper {
  display: none;
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: #00000055;
  z-index: 90;
}

%btn-hoverActive {
  &:hover {
    background-color: #00000033;
  }
  &:active {
    background-color: #00000066;
  }
}

%svg-set {
  width: 15px;
  height: 15px;
  margin: 15px 5px;
}

/*------------mixin--------------------------------------------*/

@mixin defaultTransition($type: all) {
  transition: $type 3s;
  opacity: 1;
}

@mixin mx-round($radius: 15px) {
  border-radius: $radius;
}

@mixin mx-size($max, $wid, $hig) {
  @if ($max== 'max') {
    max-width: $wid;
    max-height: $hig;
  } @else if($max== 'min') {
    min-width: $wid;
    min-height: $hig;
  } @else {
    width: $wid;
    height: $hig;
  }
}

@mixin size($wid, $hig) {
  width: $wid;
  height: $hig;
}

@mixin mx-border($type) {
  border-#{$type}: 1px solid var(--black-white);
}

@mixin changecolor($prop, $color) {
  #{$prop}: $color;
}

@mixin mx-movepost($name, $trans1, $trans2, $scale1, $scale2) {
  animation: $name 0.25s linear forwards;
  margin: automargin();
  @keyframes #{$name} {
    0% {
      transform: translateX($trans1) scale($scale1);
    }
    100% {
      transform: translateX($trans2) scale($scale2);
    }
  }
}

/*------------flex--------------------------------------------*/
$flex-map: (
  start: flex-start,
  end: flex-end,
  between: space-between,
  around: space-around,
  stretch: stretch,
  center: center
);

@function flex-value($key) {
  @return map-get($flex-map, $key);
}

@mixin mx-flexbox($ju: center, $al: center) {
  display: flex;
  justify-content: flex-value($ju);
  align-items: flex-value($al);
}

/*------------position--------------------------------------------*/

@mixin position-center-x($type: absolute) {
  @if ($type == fixed or $type==absolute) {
    position: $type;
    left: 50%;
    transform: translateX(-50%);
  }
}
@mixin position-center-y($type: absolute) {
  @if ($type == fixed or $type==absolute) {
    position: $type;
    top: 50%;
    transform: translateY(-50%);
  }
}
@mixin position-center($type: absolute) {
  @if ($type == fixed $type==absolute) {
    position: $type;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
@mixin position-top($type: absolute) {
  @if ($type == fixed or $type==absolute) {
    position: $type;
    top: 0;
  }
}

/*------------image--------------------------------------------*/

%image-profile {
  display: block;
  overflow: hidden;
  border-radius: 50%;
  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

%image-default {
  display: block;
  overflow: hidden;
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

/*------------font--------------------------------------------*/

$font-size-small: 11px;
$line-height-small: 11px;
$font-size-middle: 16px;
$line-height-middle: 16px;
$font-size-big: 24px;
$line-height-big: 24px;
//letter-spacing: $letter-spacing-12;

@mixin font-style-small() {
  font-size: $font-size-small;
  line-height: $line-height-small;
}
@mixin font-style-middle() {
  font-size: $font-size-middle;
  line-height: $line-height-middle;
}
@mixin font-style-big() {
  font-size: $font-size-big;
  line-height: $line-height-big;
}
@mixin font-style-custom($size) {
  font-size: #{$size}px;
  line-height: #{$size}px;
}

@mixin font-style($size, $color: false) {
  @if ($size==small) {
    @include font-style-small;
  }
  @if ($size==middle) {
    @include font-style-middle;
  }
  @if ($size==big) {
    @include font-style-big;
  }
  @if (type-of($size) ==number) {
    @include font-style-custom($size);
  }

  @if (type-of($color) ==color) {
    color: $color;
  }
}
